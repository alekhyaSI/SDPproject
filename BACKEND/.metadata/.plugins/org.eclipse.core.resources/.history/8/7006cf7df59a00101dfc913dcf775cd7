package com.tutorfinder.service;

import com.tutorfinder.dto.StudentProfileDTO;
import com.tutorfinder.dto.TutorProfileDTO;
import com.tutorfinder.model.Assignment;
import com.tutorfinder.model.StudentProfile;
import com.tutorfinder.model.TutorProfile;
import com.tutorfinder.repository.AssignmentRepository;
import com.tutorfinder.repository.StudentProfileRepository;
import com.tutorfinder.repository.TutorProfileRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class AdminService {

    @Autowired
    private StudentProfileRepository studentRepo;

    @Autowired
    private TutorProfileRepository tutorRepo;

    @Autowired
    private AssignmentRepository assignmentRepo;

    // --- Get all students ---
    public List<StudentProfileDTO> getAllStudents() {
        List<StudentProfile> students = studentRepo.findAll();
        return students.stream().map(StudentProfileDTO::new).toList();
    }

    // --- Get all tutors ---
    public List<TutorProfileDTO> getAllTutors() {
        List<TutorProfile> tutors = tutorRepo.findAll();
        return tutors.stream().map(TutorProfileDTO::new).toList();
    }

    // --- Get matching tutors for a student ---
    public List<TutorProfileDTO> getMatchingTutorsForStudent(Long studentId) {
        StudentProfile studentEntity = studentRepo.findById(studentId)
                .orElseThrow(() -> new RuntimeException("Student not found"));
        StudentProfileDTO student = new StudentProfileDTO(studentEntity);

        List<TutorProfileDTO> allTutors = getAllTutors();

        return allTutors.stream()
                .filter(tutor -> tutor.getSubjectsAvailability().stream().anyMatch(ts ->
                        student.getSubjectsAvailability().stream().anyMatch(ss ->
                                ss.getSubject().equalsIgnoreCase(ts.getSubject())
                                        && ss.getAvailability().replaceAll("\\s", "")
                                        .equalsIgnoreCase(ts.getAvailability().replaceAll("\\s", ""))
                        )
                ))
                .toList();
    }

    // --- Assign tutor to student ---
    public void assignTutorToStudent(Long studentId, Long tutorId) {
        Assignment assignment = new Assignment();
        assignment.setStudentId(studentId);
        assignment.setTutorId(tutorId);
        assignmentRepo.save(assignment);
    }
}